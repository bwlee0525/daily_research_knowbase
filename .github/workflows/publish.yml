name: Publish (TPE 09:00) — Build & gh-pages

on:
  schedule:
    # 09:00 Asia/Taipei = 01:00 UTC
    - cron: '0 1 * * *'
  workflow_dispatch:
    inputs:
      force:
        description: 'Run regardless of time gate'
        required: false
        default: 'false'
        type: choice
        options: ['false', 'true']

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Taipei
      RETAIN_DAYS: "30"   # 可調：保留最近 N 天
      RETAIN_MAX:  "100"  # 可調：最多保留 N 篇
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Gate by TPE time or force
        id: gate
        run: |
          HOUR=$(TZ=$TZ date +%H)
          if [ "${{ github.event.inputs.force || 'false' }}" = "true" ]; then
            echo "RUN=true" >> $GITHUB_OUTPUT
          elif [ "$HOUR" = "09" ]; then
            echo "RUN=true" >> $GITHUB_OUTPUT
          else
            echo "RUN=false" >> $GITHUB_OUTPUT
          fi
          echo "NOW=$(TZ=$TZ date '+%F %T %Z')" >> $GITHUB_OUTPUT

      - name: Setup Python
        if: steps.gate.outputs.RUN == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Build site (scripts/daily.py → out/)
        if: steps.gate.outputs.RUN == 'true'
        run: |
          python -m pip install --upgrade pip
          if [ -f backend/requirements.txt ]; then
            pip install -r backend/requirements.txt
          fi
          python -m scripts.daily

      - name: Checkout gh-pages into ./_site_prev
        if: steps.gate.outputs.RUN == 'true'
        run: |
          git fetch origin gh-pages || true
          rm -rf _site_prev
          mkdir -p _site_prev
          if git rev-parse --verify origin/gh-pages >/dev/null 2>&1; then
            git --work-tree=_site_prev checkout origin/gh-pages -- .
          else
            echo "<html><body>init</body></html>" > _site_prev/index.html
          fi
          find _site_prev -name ".git*" -maxdepth 1 -delete || true

      - name: Merge previous site into out/ (keep history)
        if: steps.gate.outputs.RUN == 'true'
        run: |
          rsync -a --delete --exclude='.git' --exclude='index.html' _site_prev/ out/

      - name: Apply retention policy
        if: steps.gate.outputs.RUN == 'true'
        run: |
          args=""
          [ -n "${RETAIN_DAYS}" ] && args="$args --days ${RETAIN_DAYS}"
          [ -n "${RETAIN_MAX}" ] && args="$args --max ${RETAIN_MAX}"
          if [ -n "$args" ]; then
            python scripts/retention.py --root out $args
          else
            echo "No retention configured; skip."
          fi

      - name: Commit and push to gh-pages
        if: steps.gate.outputs.RUN == 'true'
        run: |
          # 準備暫存 worktree
          rm -rf _ghp
          git worktree add -B gh-pages _ghp origin/gh-pages || git worktree add -B gh-pages _ghp
          rsync -a --delete --exclude='.git' out/ _ghp/
          cd _ghp
          git add -A
          git commit -m "publish: $(TZ=$TZ date +%F) site update" || echo "no changes to commit"
          git push origin gh-pages

      - name: Smoke check (retry until live)
        if: steps.gate.outputs.RUN == 'true'
        env:
          OWNER_REPO: ${{ github.repository }}
        run: |
          OWNER=$(echo "$OWNER_REPO" | cut -d'/' -f1)
          REPO=$(echo "$OWNER_REPO" | cut -d'/' -f2)
          URL="https://${OWNER}.github.io/${REPO}/"
          echo "Check URL: $URL"
          ok=0
          for i in $(seq 1 18); do
            sleep 10
            code=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
            echo "Try #$i code=$code"
            if [ "$code" = "200" ]; then ok=1; break; fi
          done
          if [ "$ok" != "1" ]; then
            echo "Smoke failed for $URL"
            exit 1
          fi

      - name: Skipped by gate
        if: steps.gate.outputs.RUN != 'true'
        run: |
          echo "Gate says RUN=false @ ${{ steps.gate.outputs.NOW }}"
